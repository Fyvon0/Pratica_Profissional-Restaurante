package dbos;

import java.sql.*;
import java.util.Calendar;
import java.math.*;

public class Mesa {
	private int codMesa, reserva, statusMesa, codCliente;
	private Timestamp horario, horaPrevista, horaFechamento;
	private String formaPagamento;
	private BigDecimal valorTotal;
	
	public int getCodMesa() {
		return codMesa;
	}
	public void setCodMesa(int codMesa) throws Exception{
		if (codMesa <= 0)
			throw new Exception ("Código inválido")
			
		this.codMesa = codMesa;
	}
	public int getReserva() {
		return reserva;
	}
	public void setReserva(int reserva) throws Exception{
		if (!(reserva == 0 || reserva == 1))
			throw new Exception ("Status de reserva inválido");
		
		this.reserva = reserva;
	}
	public int getStatusMesa() {
		return statusMesa;
	}
	public void setStatusMesa(int statusMesa) throws Exception{
		if (!(statusMesa == 1 || statusMesa == 2))
			throw new Exception ("StatusMesa inválido");
		
		this.statusMesa = statusMesa;
	}
	public int getCodCliente() {
		return codCliente;
	}
	public void setCodCliente(int codCliente) throws Exception{
		if (codCliente <= 0)
			throw new Exception ("Código de cliente inválido");
		
		this.codCliente = codCliente;
	}
	public Timestamp getHorario() {
		return horario;
	}
	public void setHorario(Timestamp horario) throws Exception{
		Calendar cal = Calendar.getInstance();
		cal.setLenient(false);
		cal.setTime(horario);
		this.horario = (Timestamp)cal.getTime();
	}
	public Timestamp getHoraPrevista() {
		return horaPrevista;
	}
	public void setHoraPrevista(Timestamp horaPrevista) {
		Calendar cal = Calendar.getInstance();
		cal.setLenient(false);
		cal.setTime(horaPrevista);
		this.horaPrevista = (Timestamp)cal.getTime();
	}
	public Timestamp getHoraFechamento() {
		return horaFechamento;
	}
	public void setHoraFechamento(Timestamp horaFechamento) {
		Calendar cal = Calendar.getInstance();
		cal.setLenient(false);
		cal.setTime(horaFechamento);
		this.horaFechamento = (Timestamp)cal.getTime();
	}
	public String getFormaPagamento() {
		return formaPagamento;
	}
	public void setFormaPagamento(String formaPagamento) throws Exception{
		if (formaPagamento == null || formaPagamento.equals(""))
			throw new Exception ("Forma de Pagamento não fornecida");
			
		this.formaPagamento = formaPagamento;
	}
	public BigDecimal getValorTotal() {
		return valorTotal;
	}
	public void setValorTotal(BigDecimal valorTotal) {
		if (valorTotal.compareTo(new BigDecimal(0.0)) < 0)
			throw new Exception ("Valor Total inválido");
			
		this.valorTotal = valorTotal;
	}
	
	
}
